{"ast":null,"code":"var _jsxFileName = \"/home/apoorva/coding/week_18/day_4/frontend/auth/src/components/MyBlog.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\n\nclass MyBlog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      let local = localStorage.getItem(\"token\");\n      console.log(JSON.parse(local));\n\n      if (JSON.parse(local) != null) {\n        const token = {\n          headers: {\n            Authorization: \"Bearer \" + JSON.parse(local)\n          }\n        };\n        axios.post('http://127.0.0.1:5000/read', {}, token).then(res => console.log(res)).catch(error => console.log(error));\n      }\n    };\n\n    this.state = {\n      myBlogs: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.isloggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Sign In/ Sign Up First\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isloggedIn: state.isloggedIn\n});\n\nexport default connect(mapStateToProps, null)(MyBlog);","map":{"version":3,"sources":["/home/apoorva/coding/week_18/day_4/frontend/auth/src/components/MyBlog.js"],"names":["React","axios","connect","MyBlog","Component","constructor","props","componentDidMount","local","localStorage","getItem","console","log","JSON","parse","token","headers","Authorization","post","then","res","catch","error","state","myBlogs","render","isloggedIn","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,iBAPkB,GAOE,MAAK;AACrB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAZ;;AACA,UAAGK,IAAI,CAACC,KAAL,CAAWN,KAAX,KAAqB,IAAxB,EAA6B;AACzB,cAAMO,KAAK,GAAG;AACVC,UAAAA,OAAO,EAAG;AAACC,YAAAA,aAAa,EAAG,YAAUJ,IAAI,CAACC,KAAL,CAAWN,KAAX;AAA3B;AADA,SAAd;AAGAP,QAAAA,KAAK,CAACiB,IAAN,CAAW,4BAAX,EAAwC,EAAxC,EAA2CH,KAA3C,EAAkDI,IAAlD,CACCC,GAAG,IACAT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAFJ,EAGEC,KAHF,CAGQC,KAAK,IAAIX,OAAO,CAACC,GAAR,CAAYU,KAAZ,CAHjB;AAIH;AAEJ,KApBiB;;AAEd,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAG;AADH,KAAX;AAGH;;AAiBDC,EAAAA,MAAM,GACN;AACI,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWoB,UAAX,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAGG;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAJR,CADJ;AAWH;;AApC+B;;AAuCpC,MAAMC,eAAe,GAAGJ,KAAK,KAAK;AAC9BG,EAAAA,UAAU,EAAGH,KAAK,CAACG;AADW,CAAL,CAA7B;;AAMA,eAAexB,OAAO,CAACyB,eAAD,EAAiB,IAAjB,CAAP,CAA+BxB,MAA/B,CAAf","sourcesContent":["import React from \"react\"\nimport axios from 'axios'\nimport { connect } from \"react-redux\"\n\nclass MyBlog extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            myBlogs : []\n        }\n    }\n\n    componentDidMount = () =>{\n        let local = localStorage.getItem(\"token\")\n        console.log(JSON.parse(local))\n        if(JSON.parse(local) != null){\n            const token = {\n                headers : {Authorization : \"Bearer \"+JSON.parse(local)}\n            }\n            axios.post('http://127.0.0.1:5000/read',{},token).then\n            (res =>\n                console.log(res)\n            ).catch(error => console.log(error))\n        }\n\n    }\n\n    render()\n    {\n        return(\n            <div>\n                {this.props.isloggedIn ? (\n                    <div></div>\n                ):(\n                    <div className=\"row justify-content-center\">\n                        <h1 className=\"text-center\">Sign In/ Sign Up First</h1>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isloggedIn : state.isloggedIn\n})\n\n\n\nexport default connect(mapStateToProps,null) (MyBlog)\n"]},"metadata":{},"sourceType":"module"}